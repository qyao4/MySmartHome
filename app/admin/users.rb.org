# Registering the User model with Active Admin.
ActiveAdmin.register User do
  # Define which columns to display on the index page.
  # Sensitive fields are excluded.
  index do
    column :id
    column :username
    column :email
    column :phone
    column :address
    column :city
    column "Province" do |user|
      user.province.try(:name) # Safely try to get the name of the province
    end
    column :postal_code
    column :created_at
    column :updated_at
    column "Total Orders" do |user|
      user.orders.count # Count the total number of orders per user
    end
    column "Total Value" do |user|
      number_to_currency user.orders.sum(:total_with_taxes) # Sum the total_with_taxes of all orders
    end
    actions # Adds view/edit/delete actions
  end

  # Define the show page for an individual user.
  show do
    attributes_table do
      row :id
      row :username
      row :email
      row :phone
      row :address
      row :city
      row "Province" do |user|
        user.province.try(:name) # Display the province name
      end
      row :postal_code
      row :created_at
      row :updated_at
    end

    # Panel to display user orders and related products.
    panel "Orders" do
      table_for user.orders do
        column :id
        column "Products" do |order|
          order.order_items.map { |item| item.product.name }.join(", ") # List product names
        end
        column :gst
        column :pst
        column :total_with_taxes
        # Add more order details as needed
      end
    end
  end

  # Define the permitted parameters for user creation and updates.
  # Only non-sensitive fields are permitted.
  permit_params :username, :email, :phone, :address, :city, :province_id, :postal_code

  # Customize the form for creating and editing users.
  form do |f|
    f.inputs "User Details" do
      f.input :username
      f.input :email
      f.input :phone
      f.input :address
      f.input :city
      f.input :province, as: :select, collection: Province.all # Assuming you have a Province model
      f.input :postal_code
      # Add more inputs for user details as needed
    end
    f.actions # Add the default actions to the form
  end

  # Use a custom scope to prevent showing sensitive fields in the filter search.
  scope_to do
    User.select(User.attribute_names - ['encrypted_password', 'reset_password_token', 'reset_password_sent_at', 'remember_created_at'])
  end
end
